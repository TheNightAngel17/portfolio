---
// component imports
import {Badge} from "./ui/badge";

// library imports
import {formatDatetime} from "../lib/utils";

interface Job {
    title: string;
    company: string;
    location: string;
    startDate: string;
    endDate: string;
    goals: string[];
    currentJob: boolean;
    description: string;
    keyAccomplishments: string[]
}

const {jobData} = Astro.props;  // Ensure correct typing for the props
const {
    title,
    company,
    location,
    startDate,
    endDate,
    goals,
    currentJob,
    description,
    keyAccomplishments
} = jobData as Job;

---

<div class="flex flex-col gap-2">

    <div class="flex flex-col sm:flex-row justify-between">
        <h3 class="text-xl font-bold">{company}</h3>
        <Badge className="bg-primary-light dark:bg-primary-dark w-fit rounded-md whitespace-nowrap">
            {formatDatetime(startDate)} - {currentJob ? "Present" : formatDatetime(endDate)}
        </Badge>
    </div>

    <div class="flex flex-col sm:flex-row justify-between -mt-3">
        <p class="truncate">{title}</p>
        <p class="truncate">{location}</p>
    </div>


    <div set:html={description}></div>
    
    {goals && goals.length > 0 && (
        <ul class="list-disc list-inside">
            {goals.map((goal: string) => (
                    <li>{goal}</li>
            ))}
        </ul>
    )}
    {keyAccomplishments && keyAccomplishments.length > 0 && (
        <div class="bg-gray-100 dark:bg-gray-800 p-3 rounded-md mt-4">
            <h4 class="text-l font-semibold mt-2 mt-0">Key Accomplishments:</h4>
            <ul class="list-disc list-inside">
            {keyAccomplishments.map((item: string) => (
            <li>{item}</li>
            ))}
            </ul>
        </div>
    )}
</div>